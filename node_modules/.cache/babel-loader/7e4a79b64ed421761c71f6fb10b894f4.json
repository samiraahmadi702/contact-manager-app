{"ast":null,"code":"var _jsxFileName = \"/Users/samira/Documents/react/ReactPractice/contact-manager/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport Contacts from \"./components/Contact/Contacts\";\nimport AddContact from \"./components/Contact/AddContact\";\nimport ViewContact from \"./components/Contact/ViewContact\";\nimport EditContact from \"./components/Contact/EditContact\";\nimport { useEffect, useState } from \"react\";\nimport { contactContext } from \"./context/contactContext\";\nimport { createContact, getAllContacts, getAllGroups } from \"./services/contactService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [allContacts, setAllContacts] = useState([]);\n  const [contact, setContact] = useState({});\n  const [allGroups, setAllGroups] = useState([]);\n  const [filteredContacts, setFilteredContacts] = useState([]);\n  const [contactQuery, setContactQuery] = useState({\n    text: \"\"\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          data: allContactsData\n        } = await getAllContacts();\n        const {\n          data: allGroupsData\n        } = await getAllGroups();\n        setAllContacts(allContactsData);\n        setFilteredContacts(allContactsData);\n        setAllGroups(allGroupsData);\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n\n    fetchData().then();\n  }, []);\n\n  const searchContact = event => {\n    setContactQuery({ ...contactQuery,\n      text: event.target.value\n    });\n    const contacts = allContacts.filter(contact => {\n      contact.fullName.toLowerCase().includes(event.target.value.toLowerCase());\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(contactContext.Provider, {\n    value: {\n      loading,\n      setLoading,\n      contact,\n      setContact,\n      allContacts,\n      setAllContacts,\n      allGroups,\n      setAllGroups,\n      filteredContacts,\n      setFilteredContacts,\n      contactQuery,\n      setContactQuery,\n      searchContact\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contacts\",\n          element: /*#__PURE__*/_jsxDEV(Contacts, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contacts/add\",\n          element: /*#__PURE__*/_jsxDEV(AddContact, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contacts/:contactId\",\n          element: /*#__PURE__*/_jsxDEV(ViewContact, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contacts/edit/:contactId\",\n          element: /*#__PURE__*/_jsxDEV(EditContact, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 70\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"SXHoHwAclXwkuxg6sAigO0hnbcc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Route","Routes","Navigate","Contacts","AddContact","ViewContact","EditContact","useEffect","useState","contactContext","createContact","getAllContacts","getAllGroups","App","loading","setLoading","allContacts","setAllContacts","contact","setContact","allGroups","setAllGroups","filteredContacts","setFilteredContacts","contactQuery","setContactQuery","text","fetchData","data","allContactsData","allGroupsData","err","console","log","message","then","searchContact","event","target","value","contacts","filter","fullName","toLowerCase","includes"],"sources":["/Users/samira/Documents/react/ReactPractice/contact-manager/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {Route, Routes, Navigate} from 'react-router-dom';\nimport Contacts from \"./components/Contact/Contacts\";\nimport AddContact from \"./components/Contact/AddContact\";\nimport ViewContact from \"./components/Contact/ViewContact\";\nimport EditContact from \"./components/Contact/EditContact\";\nimport {useEffect, useState} from \"react\";\nimport {contactContext} from \"./context/contactContext\";\nimport {createContact, getAllContacts, getAllGroups} from \"./services/contactService\";\n\nfunction App() {\n    const [loading, setLoading] = useState(false);\n    const [allContacts, setAllContacts] = useState([]);\n    const [contact, setContact] = useState({});\n    const [allGroups, setAllGroups] = useState([]);\n    const [filteredContacts, setFilteredContacts] = useState([]);\n    const [contactQuery, setContactQuery] = useState({text: \"\"});\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n\n                const {data: allContactsData} = await getAllContacts();\n                const {data: allGroupsData} = await getAllGroups();\n\n                setAllContacts(allContactsData);\n                setFilteredContacts(allContactsData);\n                setAllGroups(allGroupsData);\n\n\n            } catch (err) {\n                console.log(err.message);\n            }\n        }\n        fetchData().then()\n    }, [])\n\n    const searchContact = (event) => {\n        setContactQuery({...contactQuery, text: event.target.value});\n        const contacts = allContacts.filter((contact) => {\n            contact.fullName.toLowerCase().includes(event.target.value.toLowerCase()\n            )\n        })\n\n    }\n\n    return (\n        <contactContext.Provider\n            value={{\n                loading,\n                setLoading,\n                contact,\n                setContact,\n                allContacts,\n                setAllContacts,\n                allGroups,\n                setAllGroups,\n                filteredContacts,\n                setFilteredContacts,\n                contactQuery,\n                setContactQuery,\n                searchContact\n            }}>\n            <div className=\"App\">\n                <Navbar/>\n                <Routes>\n                    <Route path=\"/\" element={<Navigate to=\"/contacts\"/>}></Route>\n                    <Route path=\"/contacts\" element={<Contacts/>}/>\n                    <Route path=\"/contacts/add\" element={<AddContact/>}/>\n                    <Route path=\"/contacts/:contactId\" element={<ViewContact/>}/>\n                    <Route path=\"/contacts/edit/:contactId\" element={<EditContact/>}/>\n                </Routes>\n            </div>\n        </contactContext.Provider>\n    )\n        ;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}